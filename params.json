{"name":"Utilities","body":"Installation\r\n------------\r\n    gem install utilities\r\n\r\nTest\r\n----\r\n    rspec test/test_utilities\r\n\r\nUsage\r\n-----\r\n#### Array\r\n* to_numerics\r\n\r\n        [\"3\", 4, \"7.9\"].to_numerics #=> [3.0, 4.0, 7.9]\r\n    \r\n* numerics?\r\n\r\n        [1, 2.0, 3].numerics? #=> true\r\n    \r\n* reverse_sort\r\n\r\n        [1,8,3].reverse_sort #=> [8,3,1]\r\n\r\n* map_with\r\n\r\n        [1,2,3].map_with([4,5,6]){|i,j| i * j }  #=> [4,10,18]\r\n\r\n* wrap\r\n\r\n        [1, 2, 3].wrap(\"*\") #=> [\"*1*\", \"*2*\", \"*3*\"]\r\n        [1, 2, 3].wrap(\"*\", \"+\") #=> [\"*1+\", \"*2+\", \"*3+\"]\r\n\r\n#### Enumerable\r\n* collect_first\r\n\r\n        {:a=>1, :b=>2, :c=>3}.collect_first{|k,v| [k, v * 3] if v == 2 } #=> [:b, 6]\r\n\r\n#### Hash\r\n* collect_keys, map_keys (passing true as a parameter will collect keys recursively)\r\n\r\n        {:a=>1, :b=>2, :c=>3}.collect_keys{|k| k.to_s.upcase } #=> {\"A\"=>1, \"B\"=>2, \"C\"=>3}\r\n    \r\n* collect_values, map_values (passing true as a parameter will collect values recursively)\r\n\r\n        {:a=>1, :b=>2, :c=>3}.collect_values{|v| v * -1 } #=> {:a=>-1, :b=>-2, :c=>-3}\r\n\r\n* symbolize_keys\r\n\r\n        {\"a\"=>1, \"b\"=>2}.symbolize_keys #=> {:a=>1, :b=>2}\r\n\r\n* stringify_keys\r\n\r\n        {:a=>1, :b=>2}.stringify_keys #=> {\"a\"=>1, \"b\"=>2}\r\n\r\n#### Kernel\r\n* raiser\r\n\r\n        raiser 1, Hash.new, Array.new #=> RuntimeError \"1, {}, []\"\r\n\r\n#### Numeric\r\n* degrees\r\n\r\n        180.degrees == Math::PI #=> true\r\n\r\n* square\r\n\r\n        2.square #=> 4\r\n\r\n* hour_to_string\r\n\r\n        14.5.hour_to_string #=> \"14:30\"\r\n\r\n* sqrt\r\n\r\n        9.sqrt #=> 3\r\n\r\n* rank\r\n\r\n        5.rank(3, 9) #=> 0.3333...\r\n\r\n* to_decimals\r\n\r\n        1.759.to_decimals(2) #=> 1.76\r\n\r\n* percentage_of\r\n\r\n        48.percentage_of(50) #=> 96\r\n\r\n#### Object\r\n* attempt\r\n\r\n    Attempts to call a method on given object. If it fails (nil or NoMethodError), returns nil\r\n\r\n        nil.attempt(:something) #=> nil\r\n        \"String\".attempt(:wrong_method_name) #=> nil\r\n\r\n* is_any?\r\n    \r\n    Returns true if object is one of the passed classes\r\n\r\n        {}.is_any?(Array, Hash, Class) #=> true\r\n        \"\".is_any?(Array) #=> false\r\n    \r\n\r\n#### String\r\n* hour_to_float\r\n\r\n        \"14:30\".hour_to_float #=> 14.5\r\n\r\n* float?\r\n\r\n        \"123.456\".float? #=> true\r\n\r\n#### Utilities\r\n* Statistics\r\n\r\n    This module is intended to provide basic statistic functionnalities to numeric arrays. You may either\r\n    call [].to_stats or extend an existing array with Utilities::Statistics module.\r\n\r\n    * sum\r\n    \r\n            [1,2,3].sum #=> 6\r\n    \r\n    * squares\r\n        \r\n            [1,2,3].squares #=> [1,4,9]\r\n    \r\n    * sqrts\r\n    \r\n            [9,16,25].sqrts #=> [3,4,5]\r\n    \r\n    * mean\r\n    \r\n            [1,2,3,4,5].mean #=> 3\r\n    \r\n    * frequences\r\n    \r\n            [1,1,2,3,3,3,4].frequences #=> {1=>2, 2=>1, 3=>3, 4=>1}\r\n    \r\n    * modes\r\n    \r\n            [1,2,3,3,4,4,4,5].modes #=> {4=>3}\r\n    \r\n    * statistics\r\n    \r\n            [1,2,3,4,5].statistics #=> {\r\n              :first=>1,\r\n              :last=>5,\r\n              :size=>5,\r\n              :sum=>15,\r\n              :squares=>[1, 4, 9, 16, 25],\r\n              :sqrts=>[1.0, 1.4142135623730951, 1.7320508075688772, 2.0, 2.23606797749979],\r\n              :min=>1,\r\n              :max=>5,\r\n              :mean=>3.0,\r\n              :frequences=>{1=>1, 2=>1, 3=>1, 4=>1, 5=>1},\r\n              :variance=>2.5,\r\n              :standard_deviation=>1.5811388300841898,\r\n              :population_variance=>2.0,\r\n              :population_standard_deviation=>1.4142135623730951,\r\n              :modes=>{1=>1, 2=>1, 3=>1, 4=>1, 5=>1},\r\n              :ranks=>[0.0, 1.0, 2.0, 3.0, 4.0],\r\n              :median=>3,\r\n              :midrange=>3.0,\r\n              :statistical_range=>4,\r\n              :quartiles=>[1.5, 3, 4.5],\r\n              :interquartile_range=>3.0\r\n            }","tagline":"Utilities provides a handful of useful goodies including statistics, numeric arrays and the well-known raiser.","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}